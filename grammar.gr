/* Grammar ================================\

G ::= {FUNC_DECL}+

// Functions ==================================================================

FUNC_DECL  ::= func ID ARGLIST BLOCK_STATEMENT
FUNC_CALL  ::= ID ARGLIST

ARGLIST    ::= ARGBLOCK*
ARGBLOCK   ::= [ {ID | ID = EXPR} ]

// Statements =================================================================

BLOCK_STATEMENT ::= STATEMENT | { BLOCK_STATEMENT* }
STATEMENT       ::= {DEF_VAR | COND | ASGN | FUNC_CALL} ; | IF | WHILE

IF    ::= ? (COND) BLOCK_STATEMENT {: BLOCK_STATEMENT}?
WHILE ::= while (COND) BLOCK_STATEMENT
ASGN  ::= ID = COND

// Variables ==================================================================

DEF_VAR ::= "var" {ID | ID = COND}

// Math expression ============================================================

COND ::= EXPR {{ < | <= | == | >= | > | != } EXPR}*
EXPR ::= TERM {[+-]TERM}*
TERM ::= FACT {{/|*}FACT}*

FACT ::= [+-]FACT | UNIT^FACT | UNIT
UNIT ::= FUNC_CALL | ID | (EXPR) | NUMB

// Number & Id ================================================================

NUMB ::= [+-]?[0-9]+{.[0-9]+}?{[eE][0-9]+}?
ID   ::= [a-zA-Z_][a-zA-Z_0-9]*

*///=======================================/