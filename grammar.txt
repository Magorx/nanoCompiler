/* Grammar ================================\

G ::= FUNC_DECL+

// Functions

FUNC_DECL  ::= func ID ARGLIST BLOCK_STATEMENT

ARGLIST    ::= 

// Statements

BLOCK_STATEMENT ::= {}
STATEMENT       ::= {DEF_VAR | EXPR | ASGN | FUNC_CALL} ; | IF | WHILE

IF    ::= if (COND) BLOCK_STATEMENT {else BLOCK_STATEMENT}?
WHILE ::= while (COND) BLOCK_STATEMENT
ASGN ::= ID = EXPR

// Variables

DEF_VAR ::= "var " {name | name = EXPR}

CODE_BLOCK ::= CODE_LINE | { CODE_LINE{CODE_LINE}* }

CODE_LINE ::= {ASGN | EXPR} ;

// Math expression

COND ::= EXPR {{ < | <= | == | >= | > | != } EXPR}*
EXPR ::= TERM {[+-]TERM}*
TERM ::= FACT {{/|*}FACT}*

FACT ::= [+-]FACT | UNIT^FACT | UNIT
UNIT ::= CALL_FUNC | ID | (EXPR) | NUMB

// Number & Id

NUMB ::= [+-]?[0-9]+{.[0-9]+}?{[eE][0-9]+}?
ID   ::= [a-zA-Z_][a-zA-Z_0-9]*

*///=======================================/