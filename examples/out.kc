push 200
pop rvx
push 1000
pop rmx

; (GLOBAL_UNDESTURBENCE_CHECKER)[op_20](7.77778e+06)
push 7777777
pop [100]


; ((((A)[op_20](-7777.78))[op_305](((B)[op_20](-7777.78))[op_305](((C)[op_20](-7777.78))[op_305]([op_305]))))[op_300](printn))[op_301]((){)
jmp _func_printn_1_END
_func_printn_1_BEGIN:
printn_1:

; ((A)[op_8](-7777.78))[op_12]([op_31]((){))
if_1_cond:
push [rvx + 0]
push 0
push 7777.777
sub

neq

push 0
jne if_1_true
if_1_false:

jmp if_1_end

if_1_true:

; (d(A))[op_202]
push [rvx + 0]
dup
out
pop rzx

; (e(32))[op_202]
push 32
dup
out_c
pop rzx

if_1_end:

; ((B)[op_8](-7777.78))[op_12]([op_31]((){))
if_2_cond:
push [rvx + 1]
push 0
push 7777.777
sub

neq

push 0
jne if_2_true
if_2_false:

jmp if_2_end

if_2_true:

; (d(B))[op_202]
push [rvx + 1]
dup
out
pop rzx

; (e(32))[op_202]
push 32
dup
out_c
pop rzx

if_2_end:

; ((C)[op_8](-7777.78))[op_12]([op_31]((){))
if_3_cond:
push [rvx + 2]
push 0
push 7777.777
sub

neq

push 0
jne if_3_true
if_3_false:

jmp if_3_end

if_3_true:

; (d(C))[op_202]
push [rvx + 2]
dup
out
pop rzx

; (e(32))[op_202]
push 32
dup
out_c
pop rzx

if_3_end:

; (d)[op_202]
push 10
dup
out_c
pop rzx
push 0
swp
ret
_func_printn_1_END:

; ((((arr)[op_20](arr))[op_305](((size)[op_20](size))[op_305]([op_305])))[op_300](printn_arr))[op_301]((){)
jmp _func_printn_arr_1_END
_func_printn_arr_1_BEGIN:
printn_arr_1:

; (i)[op_20](0)
push 0
pop [rvx + 2]

; ((i)<((size)-(1)))[op_13]((){)
while_1_cond:
push [rvx + 2]
push [rvx + 1]
push 1
sub
lt

push 0
je while_1_end

; (d((((i)[op_202])[op_306]([op_306]))[op_302](arr)))[op_202]
push [rvx + 0]
push [rvx + 2]
add
pop rax
push [rax + 1]
dup
out
pop rzx

; (e(32))[op_202]
push 32
dup
out_c
pop rzx

; ((i)=((i)+(1)))[op_202]
push [rvx + 2]
push 1
add
pop [rvx + 2]
push [rvx + 2]
pop rzx
jmp while_1_cond

while_1_end:

; (d((((i)[op_202])[op_306]([op_306]))[op_302](arr)))[op_202]
push [rvx + 0]
push [rvx + 2]
add
pop rax
push [rax + 1]
dup
out
pop rzx
push 0
swp
ret
_func_printn_arr_1_END:

; ((((A)[op_20](-7777.78))[op_305](((B)[op_20](-7777.78))[op_305](((C)[op_20](-7777.78))[op_305]([op_305]))))[op_300](printc))[op_301]((){)
jmp _func_printc_1_END
_func_printc_1_BEGIN:
printc_1:

; ((A)[op_8](-7777.78))[op_12]([op_31]((){))
if_4_cond:
push [rvx + 0]
push 0
push 7777.777
sub

neq

push 0
jne if_4_true
if_4_false:

jmp if_4_end

if_4_true:

; (e(A))[op_202]
push [rvx + 0]
dup
out_c
pop rzx

; (e(32))[op_202]
push 32
dup
out_c
pop rzx

if_4_end:

; ((B)[op_8](-7777.78))[op_12]([op_31]((){))
if_5_cond:
push [rvx + 1]
push 0
push 7777.777
sub

neq

push 0
jne if_5_true
if_5_false:

jmp if_5_end

if_5_true:

; (e(B))[op_202]
push [rvx + 1]
dup
out_c
pop rzx

; (e(32))[op_202]
push 32
dup
out_c
pop rzx

if_5_end:

; ((C)[op_8](-7777.78))[op_12]([op_31]((){))
if_6_cond:
push [rvx + 2]
push 0
push 7777.777
sub

neq

push 0
jne if_6_true
if_6_false:

jmp if_6_end

if_6_true:

; (e(C))[op_202]
push [rvx + 2]
dup
out_c
pop rzx

; (e(32))[op_202]
push 32
dup
out_c
pop rzx

if_6_end:

; (d)[op_202]
push 10
dup
out_c
pop rzx
push 0
swp
ret
_func_printc_1_END:

; ((((x)[op_20])[op_305]([op_305]))[op_300](abs))[op_301]((){)
jmp _func_abs_1_END
_func_abs_1_BEGIN:
abs_1:

; ((x)[op_6](0))[op_12](()[op_31]())
if_7_cond:
push [rvx + 0]
push 0
ge

push 0
jne if_7_true
if_7_false:

; ([op_18](-(x)))[op_202]
push 0
push [rvx + 0]
sub
swp
ret
pop rzx

jmp if_7_end

if_7_true:

; ([op_18](x))[op_202]
push [rvx + 0]
swp
ret
pop rzx

if_7_end:
push 0
swp
ret
_func_abs_1_END:

; (_SCREEN_W)[op_20](80)
push 80
pop [105]


; (_SCREEN_H)[op_20](30)
push 30
pop [106]


; ((((h)[op_20])[op_305](((w)[op_20])[op_305]([op_305])))[op_300](init_2d))[op_301]((){)
jmp _func_init_2d_1_END
_func_init_2d_1_BEGIN:
init_2d_1:

; (arr)[op_20](g(h))
push [rvx + 0]
pop rax
push rmx
push rmx
push rax
add
pop rmx
pop [rvx + 2]

; (arr_data)[op_20](g((h)*(w)))
push [rvx + 0]
push [rvx + 1]
mul
pop rax
push rmx
push rmx
push rax
add
pop rmx
pop [rvx + 3]

; ((((i)[op_20](0))[op_17]((i)<(h)))[op_17]((i)=((i)+(1))))[op_14]((){)

for_1_init_block:
push 0
pop [rvx + 4]

for_1_start:

for_1_cond:
push [rvx + 4]
push [rvx + 0]
lt

push 0
je for_1_end

; (((((i)[op_202])[op_306]([op_306]))[op_302](arr))=((arr_data)+((w)*(i))))[op_202]
push [rvx + 3]
push [rvx + 1]
push [rvx + 4]
mul
add
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [rvx + 4]
push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx
for_1_action:
push [rvx + 4]
push 1
add
pop [rvx + 4]
push [rvx + 4]
pop rzx
jmp for_1_cond

for_1_end:

; ([op_18](arr))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_init_2d_1_END:

; (([op_305])[op_300](g_init))[op_301]((){)
jmp _func_g_init_1_END
_func_g_init_1_BEGIN:
g_init_1:

; ((_SCREEN_W)n(_SCREEN_H))[op_202]
push [105]

dup
pop rax
push [106]

dup
pop rbx
g_init
push rax
push rbx
mul
pop rzx
push 0
swp
ret
_func_g_init_1_END:

; (([op_305])[op_300](g_tick))[op_301]((){)
jmp _func_g_tick_1_END
_func_g_tick_1_BEGIN:
g_tick_1:

; (q)[op_202]
g_draw
push 0
pop rzx
push 0
swp
ret
_func_g_tick_1_END:

; (((y)[op_305]((x)[op_305]((c)[op_305]([op_305]))))[op_300](put_pxl))[op_301]((){)
jmp _func_put_pxl_1_END
_func_put_pxl_1_BEGIN:
put_pxl_1:

; (pos)[op_20](((y)*(_SCREEN_W))+(x))
push [rvx + 0]
push [105]

mul
push [rvx + 1]
add
pop [rvx + 3]

; ([op_18]((pos)s(c)))[op_202]
push [rvx + 3]
pop rax
push [rvx + 2]
dup
pop (rax)
swp
ret
pop rzx
push 0
swp
ret
_func_put_pxl_1_END:

; (_x)[op_20](0)
push 0
pop [111]


; (_y)[op_20](1)
push 1
pop [112]


; (_z)[op_20](2)
push 2
pop [113]


; ((((x)[op_20](0))[op_305](((y)[op_20](0))[op_305](((z)[op_20](0))[op_305]([op_305]))))[op_300](Vec3d))[op_301]((){)
jmp _func_Vec3d_1_END
_func_Vec3d_1_BEGIN:
Vec3d_1:

; (p)[op_20](g(3))
push 3
pop rax
push rmx
push rmx
push rax
add
pop rmx
pop [rvx + 3]

; (((((_x)[op_202])[op_306]([op_306]))[op_302](p))=(x))[op_202]
push [rvx + 0]
pop rbx
push rbx
push rvx + 3
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](p))=(y))[op_202]
push [rvx + 1]
pop rbx
push rbx
push rvx + 3
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](p))=(z))[op_202]
push [rvx + 2]
pop rbx
push rbx
push rvx + 3
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](p))[op_202]
push [rvx + 3]
swp
ret
pop rzx
push 0
swp
ret
_func_Vec3d_1_END:

; ((((v1)[op_20])[op_305](((v2)[op_20])[op_305]([op_305])))[op_300](sum_to_vv))[op_301]((){)
jmp _func_sum_to_vv_1_END
_func_sum_to_vv_1_BEGIN:
sum_to_vv_1:

; (((((_x)[op_202])[op_306]([op_306]))[op_302](v1))=(((((_x)[op_202])[op_306]([op_306]))[op_302](v1))+((((_x)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [111]

add
pop rax
push [rax + 1]
add
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](v1))=(((((_y)[op_202])[op_306]([op_306]))[op_302](v1))+((((_y)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [112]

add
pop rax
push [rax + 1]
add
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](v1))=(((((_z)[op_202])[op_306]([op_306]))[op_302](v1))+((((_z)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [113]

add
pop rax
push [rax + 1]
add
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](v1))[op_202]
push [rvx + 0]
swp
ret
pop rzx
push 0
swp
ret
_func_sum_to_vv_1_END:

; ((((v1)[op_20])[op_305](((v2)[op_20])[op_305]([op_305])))[op_300](sum_vv))[op_301]((){)
jmp _func_sum_vv_1_END
_func_sum_vv_1_BEGIN:
sum_vv_1:

; (ans)[op_20](Vec3d)
push 0
pop [rvx + 2]
push 0
pop [rvx + 3]
push 0
pop [rvx + 4]
push rvx
push 2
add
pop rvx
call Vec3d_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]

; (((((_x)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_x)[op_202])[op_306]([op_306]))[op_302](v1))+((((_x)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [111]

add
pop rax
push [rax + 1]
add
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_y)[op_202])[op_306]([op_306]))[op_302](v1))+((((_y)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [112]

add
pop rax
push [rax + 1]
add
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_z)[op_202])[op_306]([op_306]))[op_302](v1))+((((_z)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [113]

add
pop rax
push [rax + 1]
add
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](ans))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_sum_vv_1_END:

; ((((v1)[op_20])[op_305](((v2)[op_20])[op_305]([op_305])))[op_300](sub_to_vv))[op_301]((){)
jmp _func_sub_to_vv_1_END
_func_sub_to_vv_1_BEGIN:
sub_to_vv_1:

; (((((_x)[op_202])[op_306]([op_306]))[op_302](v1))=(((((_x)[op_202])[op_306]([op_306]))[op_302](v1))-((((_x)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [111]

add
pop rax
push [rax + 1]
sub
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](v1))=(((((_y)[op_202])[op_306]([op_306]))[op_302](v1))-((((_y)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [112]

add
pop rax
push [rax + 1]
sub
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](v1))=(((((_z)[op_202])[op_306]([op_306]))[op_302](v1))-((((_z)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [113]

add
pop rax
push [rax + 1]
sub
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](v1))[op_202]
push [rvx + 0]
swp
ret
pop rzx
push 0
swp
ret
_func_sub_to_vv_1_END:

; ((((v1)[op_20])[op_305](((v2)[op_20])[op_305]([op_305])))[op_300](sub_vv))[op_301]((){)
jmp _func_sub_vv_1_END
_func_sub_vv_1_BEGIN:
sub_vv_1:

; (ans)[op_20](Vec3d)
push 0
pop [rvx + 2]
push 0
pop [rvx + 3]
push 0
pop [rvx + 4]
push rvx
push 2
add
pop rvx
call Vec3d_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]

; (((((_x)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_x)[op_202])[op_306]([op_306]))[op_302](v1))-((((_x)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [111]

add
pop rax
push [rax + 1]
sub
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_y)[op_202])[op_306]([op_306]))[op_302](v1))-((((_y)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [112]

add
pop rax
push [rax + 1]
sub
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_z)[op_202])[op_306]([op_306]))[op_302](v1))-((((_z)[op_202])[op_306]([op_306]))[op_302](v2))))[op_202]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [113]

add
pop rax
push [rax + 1]
sub
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](ans))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_sub_vv_1_END:

; ((((v)[op_20])[op_305](((k)[op_20])[op_305]([op_305])))[op_300](mul_to_vi))[op_301]((){)
jmp _func_mul_to_vi_1_END
_func_mul_to_vi_1_BEGIN:
mul_to_vi_1:

; (((((_x)[op_202])[op_306]([op_306]))[op_302](v))=(((((_x)[op_202])[op_306]([op_306]))[op_302](v))*(k)))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
mul
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](v))=(((((_y)[op_202])[op_306]([op_306]))[op_302](v))*(k)))[op_202]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
mul
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](v))=(((((_z)[op_202])[op_306]([op_306]))[op_302](v))*(k)))[op_202]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
mul
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx
push 0
swp
ret
_func_mul_to_vi_1_END:

; ((((v)[op_20])[op_305](((k)[op_20])[op_305]([op_305])))[op_300](mul_vi))[op_301]((){)
jmp _func_mul_vi_1_END
_func_mul_vi_1_BEGIN:
mul_vi_1:

; (ans)[op_20](Vec3d)
push 0
pop [rvx + 2]
push 0
pop [rvx + 3]
push 0
pop [rvx + 4]
push rvx
push 2
add
pop rvx
call Vec3d_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]

; (((((_x)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_x)[op_202])[op_306]([op_306]))[op_302](v))*(k)))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
mul
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_y)[op_202])[op_306]([op_306]))[op_302](v))*(k)))[op_202]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
mul
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](ans))=(((((_z)[op_202])[op_306]([op_306]))[op_302](v))*(k)))[op_202]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
mul
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](ans))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_mul_vi_1_END:

; ((((v1)[op_20])[op_305](((v2)[op_20])[op_305]([op_305])))[op_300](dot_vv))[op_301]((){)
jmp _func_dot_vv_1_END
_func_dot_vv_1_BEGIN:
dot_vv_1:

; ([op_18](((((((_x)[op_202])[op_306]([op_306]))[op_302](v1))*((((_x)[op_202])[op_306]([op_306]))[op_302](v2)))+(((((_y)[op_202])[op_306]([op_306]))[op_302](v1))*((((_y)[op_202])[op_306]([op_306]))[op_302](v2))))+(((((_z)[op_202])[op_306]([op_306]))[op_302](v1))*((((_z)[op_202])[op_306]([op_306]))[op_302](v2)))))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [111]

add
pop rax
push [rax + 1]
mul
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [112]

add
pop rax
push [rax + 1]
mul
add
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [113]

add
pop rax
push [rax + 1]
mul
add
swp
ret
pop rzx
push 0
swp
ret
_func_dot_vv_1_END:

; ((((v1)[op_20])[op_305](((v2)[op_20])[op_305]([op_305])))[op_300](vec_vv))[op_301]((){)
jmp _func_vec_vv_1_END
_func_vec_vv_1_BEGIN:
vec_vv_1:

; (ans)[op_20](Vec3d)
push 0
pop [rvx + 2]
push 0
pop [rvx + 3]
push 0
pop [rvx + 4]
push rvx
push 2
add
pop rvx
call Vec3d_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]

; (((((_x)[op_202])[op_306]([op_306]))[op_302](ans))=((((((_y)[op_202])[op_306]([op_306]))[op_302](v1))*((((_z)[op_202])[op_306]([op_306]))[op_302](v2)))-(((((_z)[op_202])[op_306]([op_306]))[op_302](v1))*((((_y)[op_202])[op_306]([op_306]))[op_302](v2)))))[op_202]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [113]

add
pop rax
push [rax + 1]
mul
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [112]

add
pop rax
push [rax + 1]
mul
sub
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](ans))=((((((_z)[op_202])[op_306]([op_306]))[op_302](v1))*((((_x)[op_202])[op_306]([op_306]))[op_302](v2)))-(((((_x)[op_202])[op_306]([op_306]))[op_302](v1))*((((_z)[op_202])[op_306]([op_306]))[op_302](v2)))))[op_202]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [111]

add
pop rax
push [rax + 1]
mul
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [113]

add
pop rax
push [rax + 1]
mul
sub
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](ans))=((((((_x)[op_202])[op_306]([op_306]))[op_302](v1))*((((_y)[op_202])[op_306]([op_306]))[op_302](v2)))-(((((_y)[op_202])[op_306]([op_306]))[op_302](v1))*((((_x)[op_202])[op_306]([op_306]))[op_302](v2)))))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [112]

add
pop rax
push [rax + 1]
mul
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push [rvx + 1]
push [111]

add
pop rax
push [rax + 1]
mul
sub
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](ans))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_vec_vv_1_END:

; ((((v)[op_20])[op_305]([op_305]))[op_300](vlen))[op_301]((){)
jmp _func_vlen_1_END
_func_vlen_1_BEGIN:
vlen_1:

; ([op_18]((((((((_x)[op_202])[op_306]([op_306]))[op_302](v))^(2))+(((((_y)[op_202])[op_306]([op_306]))[op_302](v))^(2)))+(((((_z)[op_202])[op_306]([op_306]))[op_302](v))^(2)))^(0.5)))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
push 2
pow
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
push 2
pow
add
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
push 2
pow
add
push 0.5
pow
swp
ret
pop rzx
push 0
swp
ret
_func_vlen_1_END:

; ((((v)[op_20])[op_305]([op_305]))[op_300](normalize))[op_301]((){)
jmp _func_normalize_1_END
_func_normalize_1_BEGIN:
normalize_1:

; ((((v)[op_202])[op_306]((((1)/((((v)[op_202])[op_306]([op_306]))[op_302](vlen)))[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 0]
pop [rvx + 1]
push 1
push [rvx + 1]
pop [rvx + 2]
push rvx
push 2
add
pop rvx
call vlen_1
push rvx
push 2
sub
pop rvx
div
pop [rvx + 2]
push rvx
push 1
add
pop rvx
call mul_to_vi_1
push rvx
push 1
sub
pop rvx
pop rzx

; ([op_18](v))[op_202]
push [rvx + 0]
swp
ret
pop rzx
push 0
swp
ret
_func_normalize_1_END:

; ((((v1)[op_20])[op_305](((v2)[op_20])[op_305]([op_305])))[op_300](vcopy))[op_301]((){)
jmp _func_vcopy_1_END
_func_vcopy_1_BEGIN:
vcopy_1:

; (((((_x)[op_202])[op_306]([op_306]))[op_302](v1))=((((_x)[op_202])[op_306]([op_306]))[op_302](v2)))[op_202]
push [rvx + 1]
push [111]

add
pop rax
push [rax + 1]
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](v1))=((((_y)[op_202])[op_306]([op_306]))[op_302](v2)))[op_202]
push [rvx + 1]
push [112]

add
pop rax
push [rax + 1]
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](v1))=((((_z)[op_202])[op_306]([op_306]))[op_302](v2)))[op_202]
push [rvx + 1]
push [113]

add
pop rax
push [rax + 1]
pop rbx
push rbx
push rvx + 0
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](v1))[op_202]
push [rvx + 0]
swp
ret
pop rzx
push 0
swp
ret
_func_vcopy_1_END:

; ((((v)[op_20])[op_305]([op_305]))[op_300](vdup))[op_301]((){)
jmp _func_vdup_1_END
_func_vdup_1_BEGIN:
vdup_1:

; (v1)[op_20](Vec3d)
push 0
pop [rvx + 1]
push 0
pop [rvx + 2]
push 0
pop [rvx + 3]
push rvx
push 1
add
pop rvx
call Vec3d_1
push rvx
push 1
sub
pop rvx
pop [rvx + 1]

; (((((_x)[op_202])[op_306]([op_306]))[op_302](v1))=((((_x)[op_202])[op_306]([op_306]))[op_302](v)))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
pop rbx
push rbx
push rvx + 1
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](v1))=((((_y)[op_202])[op_306]([op_306]))[op_302](v)))[op_202]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
pop rbx
push rbx
push rvx + 1
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](v1))=((((_z)[op_202])[op_306]([op_306]))[op_302](v)))[op_202]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
pop rbx
push rbx
push rvx + 1
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](v1))[op_202]
push [rvx + 1]
swp
ret
pop rzx
push 0
swp
ret
_func_vdup_1_END:

; ((((v)[op_20])[op_305]([op_305]))[op_300](printv))[op_301]((){)
jmp _func_printv_1_END
_func_printv_1_BEGIN:
printv_1:

; (((((((_x)[op_202])[op_306]([op_306]))[op_302](v))[op_202])[op_306]((((((_y)[op_202])[op_306]([op_306]))[op_302](v))[op_202])[op_306]((((((_z)[op_202])[op_306]([op_306]))[op_302](v))[op_202])[op_306]([op_306]))))[op_302](printn))[op_202]
push [rvx + 0]
push [111]

add
pop rax
push [rax + 1]
pop [rvx + 1]
push [rvx + 0]
push [112]

add
pop rax
push [rax + 1]
pop [rvx + 2]
push [rvx + 0]
push [113]

add
pop rax
push [rax + 1]
pop [rvx + 3]
push rvx
push 1
add
pop rvx
call printn_1
push rvx
push 1
sub
pop rvx
pop rzx
push 0
swp
ret
_func_printv_1_END:

; (_o)[op_20](0)
push 0
pop [128]


; (_d)[op_20](1)
push 1
pop [129]


; (((o)[op_305]((d)[op_305]([op_305])))[op_300](Ray3d))[op_301]((){)
jmp _func_Ray3d_1_END
_func_Ray3d_1_BEGIN:
Ray3d_1:

; (ptr)[op_20](g(2))
push 2
pop rax
push rmx
push rmx
push rax
add
pop rmx
pop [rvx + 2]

; (((((_o)[op_202])[op_306]([op_306]))[op_302](ptr))=((((o)[op_202])[op_306]([op_306]))[op_302](vdup)))[op_202]
push [rvx + 0]
pop [rvx + 3]
push rvx
push 3
add
pop rvx
call vdup_1
push rvx
push 3
sub
pop rvx
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [128]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_d)[op_202])[op_306]([op_306]))[op_302](ptr))=((((d)[op_202])[op_306]([op_306]))[op_302](vdup)))[op_202]
push [rvx + 1]
pop [rvx + 3]
push rvx
push 3
add
pop rvx
call vdup_1
push rvx
push 3
sub
pop rvx
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [129]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((((_d)[op_202])[op_306]([op_306]))[op_302](ptr))[op_202])[op_306]([op_306]))[op_302](normalize))[op_202]
push [rvx + 2]
push [129]

add
pop rax
push [rax + 1]
pop [rvx + 3]
push rvx
push 3
add
pop rvx
call normalize_1
push rvx
push 3
sub
pop rvx
pop rzx

; ([op_18](ptr))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_Ray3d_1_END:

; (((ray)[op_305]((dist)[op_305]([op_305])))[op_300](RayCast))[op_301]((){)
jmp _func_RayCast_1_END
_func_RayCast_1_BEGIN:
RayCast_1:

; (p)[op_20](((((((_d)[op_202])[op_306]([op_306]))[op_302](ray))[op_202])[op_306]([op_306]))[op_302](vdup))
push [rvx + 0]
push [129]

add
pop rax
push [rax + 1]
pop [rvx + 2]
push rvx
push 2
add
pop rvx
call vdup_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]

; ((((p)[op_202])[op_306](((dist)[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 2]
pop [rvx + 3]
push [rvx + 1]
pop [rvx + 4]
push rvx
push 3
add
pop rvx
call mul_to_vi_1
push rvx
push 3
sub
pop rvx
pop rzx

; ((((p)[op_202])[op_306]((((((_o)[op_202])[op_306]([op_306]))[op_302](ray))[op_202])[op_306]([op_306])))[op_302](sum_to_vv))[op_202]
push [rvx + 2]
pop [rvx + 3]
push [rvx + 0]
push [128]

add
pop rax
push [rax + 1]
pop [rvx + 4]
push rvx
push 3
add
pop rvx
call sum_to_vv_1
push rvx
push 3
sub
pop rvx
pop rzx

; ([op_18](p))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_RayCast_1_END:

; (_pos)[op_20](0)
push 0
pop [132]


; (_dir)[op_20](3)
push 3
pop [133]


; (_dx)[op_20](3)
push 3
pop [134]


; (_dy)[op_20](4)
push 4
pop [135]


; (_dz)[op_20](5)
push 5
pop [136]


; (_lu)[op_20](9)
push 9
pop [137]


; (_dir_h)[op_20](12)
push 12
pop [138]


; (_dir_v)[op_20](15)
push 15
pop [139]


; (_scr_d)[op_20](6)
push 6
pop [140]


; (_scr_w)[op_20](7)
push 7
pop [141]


; (_scr_h)[op_20](8)
push 8
pop [142]


; (_lu_x)[op_20](9)
push 9
pop [143]


; (_lu_y)[op_20](10)
push 10
pop [144]


; (_lu_z)[op_20](11)
push 11
pop [145]


; (_dir_hx)[op_20](12)
push 12
pop [146]


; (_dir_hy)[op_20](13)
push 13
pop [147]


; (_dir_hz)[op_20](14)
push 14
pop [148]


; (_dir_vx)[op_20](15)
push 15
pop [149]


; (_dir_vy)[op_20](16)
push 16
pop [150]


; (_dir_vz)[op_20](17)
push 17
pop [151]


; (_max_x)[op_20](18)
push 18
pop [152]


; (_max_y)[op_20](19)
push 19
pop [153]


; ((((cam)[op_20])[op_305]([op_305]))[op_300](calc_directives))[op_301]((){)
jmp _func_calc_directives_1_END
_func_calc_directives_1_BEGIN:
calc_directives_1:

; (p)[op_20](((((cam)+(_pos))[op_202])[op_306](((((((cam)+(_dir))[op_202])[op_306]((((((_scr_d)[op_202])[op_306]([op_306]))[op_302](cam))[op_202])[op_306]([op_306])))[op_302](mul_vi))[op_202])[op_306]([op_306])))[op_302](sum_vv))
push [rvx + 0]
push [132]

add
pop [rvx + 1]
push [rvx + 0]
push [133]

add
pop [rvx + 2]
push [rvx + 0]
push [140]

add
pop rax
push [rax + 1]
pop [rvx + 3]
push rvx
push 2
add
pop rvx
call mul_vi_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]
push rvx
push 1
add
pop rvx
call sum_vv_1
push rvx
push 1
sub
pop rvx
pop [rvx + 1]

; (vert)[op_20]((((0)[op_202])[op_306](((0)[op_202])[op_306](((1)[op_202])[op_306]([op_306]))))[op_302](Vec3d))
push 0
pop [rvx + 2]
push 0
pop [rvx + 3]
push 1
pop [rvx + 4]
push rvx
push 2
add
pop rvx
call Vec3d_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]

; (horz)[op_20](((((cam)+(_dir))[op_202])[op_306](((vert)[op_202])[op_306]([op_306])))[op_302](vec_vv))
push [rvx + 0]
push [133]

add
pop [rvx + 3]
push [rvx + 2]
pop [rvx + 4]
push rvx
push 3
add
pop rvx
call vec_vv_1
push rvx
push 3
sub
pop rvx
pop [rvx + 3]

; ((((horz)[op_202])[op_306]([op_306]))[op_302](normalize))[op_202]
push [rvx + 3]
pop [rvx + 4]
push rvx
push 4
add
pop rvx
call normalize_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((vert)[op_202])[op_306]([op_306]))[op_302](normalize))[op_202]
push [rvx + 2]
pop [rvx + 4]
push rvx
push 4
add
pop rvx
call normalize_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((horz)[op_202])[op_306](((((((_scr_w)[op_202])[op_306]([op_306]))[op_302](cam))/(2))[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 3]
pop [rvx + 4]
push [rvx + 0]
push [141]

add
pop rax
push [rax + 1]
push 2
div
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call mul_to_vi_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((vert)[op_202])[op_306](((((((_scr_h)[op_202])[op_306]([op_306]))[op_302](cam))/(2))[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 2]
pop [rvx + 4]
push [rvx + 0]
push [142]

add
pop rax
push [rax + 1]
push 2
div
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call mul_to_vi_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((p)[op_202])[op_306](((horz)[op_202])[op_306]([op_306])))[op_302](sum_to_vv))[op_202]
push [rvx + 1]
pop [rvx + 4]
push [rvx + 3]
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call sum_to_vv_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((p)[op_202])[op_306](((vert)[op_202])[op_306]([op_306])))[op_302](sum_to_vv))[op_202]
push [rvx + 1]
pop [rvx + 4]
push [rvx + 2]
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call sum_to_vv_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((horz)[op_202])[op_306](((-1)[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 3]
pop [rvx + 4]
push 0
push 1
sub

pop [rvx + 5]
push rvx
push 4
add
pop rvx
call mul_to_vi_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((vert)[op_202])[op_306](((-1)[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 2]
pop [rvx + 4]
push 0
push 1
sub

pop [rvx + 5]
push rvx
push 4
add
pop rvx
call mul_to_vi_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((horz)[op_202])[op_306]([op_306]))[op_302](normalize))[op_202]
push [rvx + 3]
pop [rvx + 4]
push rvx
push 4
add
pop rvx
call normalize_1
push rvx
push 4
sub
pop rvx
pop rzx

; ((((vert)[op_202])[op_306]([op_306]))[op_302](normalize))[op_202]
push [rvx + 2]
pop [rvx + 4]
push rvx
push 4
add
pop rvx
call normalize_1
push rvx
push 4
sub
pop rvx
pop rzx

; (((((cam)+(_dir_h))[op_202])[op_306](((horz)[op_202])[op_306]([op_306])))[op_302](vcopy))[op_202]
push [rvx + 0]
push [138]

add
pop [rvx + 4]
push [rvx + 3]
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call vcopy_1
push rvx
push 4
sub
pop rvx
pop rzx

; (((((cam)+(_dir_v))[op_202])[op_306](((vert)[op_202])[op_306]([op_306])))[op_302](vcopy))[op_202]
push [rvx + 0]
push [139]

add
pop [rvx + 4]
push [rvx + 2]
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call vcopy_1
push rvx
push 4
sub
pop rvx
pop rzx

; (((((cam)+(_lu))[op_202])[op_306](((p)[op_202])[op_306]([op_306])))[op_302](vcopy))[op_202]
push [rvx + 0]
push [137]

add
pop [rvx + 4]
push [rvx + 1]
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call vcopy_1
push rvx
push 4
sub
pop rvx
pop rzx

; ([op_18](cam))[op_202]
push [rvx + 0]
swp
ret
pop rzx
push 0
swp
ret
_func_calc_directives_1_END:

; (((x)[op_305]((y)[op_305]((z)[op_305]((dx)[op_305]((dy)[op_305]((dz)[op_305]((scr_d)[op_305]((scr_w)[op_305]((scr_h)[op_305]((max_x)[op_305]((max_y)[op_305]([op_305]))))))))))))[op_300](Camera3d))[op_301]((){)
jmp _func_Camera3d_1_END
_func_Camera3d_1_BEGIN:
Camera3d_1:

; (ptr)[op_20](g(20))
push 20
pop rax
push rmx
push rmx
push rax
add
pop rmx
pop [rvx + 11]

; (((((_x)[op_202])[op_306]([op_306]))[op_302](ptr))=(x))[op_202]
push [rvx + 0]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [111]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_y)[op_202])[op_306]([op_306]))[op_302](ptr))=(y))[op_202]
push [rvx + 1]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [112]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_z)[op_202])[op_306]([op_306]))[op_302](ptr))=(z))[op_202]
push [rvx + 2]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [113]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_dx)[op_202])[op_306]([op_306]))[op_302](ptr))=(dx))[op_202]
push [rvx + 3]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [134]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_dy)[op_202])[op_306]([op_306]))[op_302](ptr))=(dy))[op_202]
push [rvx + 4]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [135]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_dz)[op_202])[op_306]([op_306]))[op_302](ptr))=(dz))[op_202]
push [rvx + 5]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [136]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_scr_d)[op_202])[op_306]([op_306]))[op_302](ptr))=(scr_d))[op_202]
push [rvx + 6]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [140]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_scr_w)[op_202])[op_306]([op_306]))[op_302](ptr))=(scr_w))[op_202]
push [rvx + 7]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [141]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_scr_h)[op_202])[op_306]([op_306]))[op_302](ptr))=(scr_h))[op_202]
push [rvx + 8]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [142]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_max_x)[op_202])[op_306]([op_306]))[op_302](ptr))=(max_x))[op_202]
push [rvx + 9]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [152]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_max_y)[op_202])[op_306]([op_306]))[op_302](ptr))=(max_y))[op_202]
push [rvx + 10]
pop rbx
push rbx
push rvx + 11
pop rax
push [rax]
push [153]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((ptr)+(_dir))[op_202])[op_306]([op_306]))[op_302](normalize))[op_202]
push [rvx + 11]
push [133]

add
pop [rvx + 12]
push rvx
push 12
add
pop rvx
call normalize_1
push rvx
push 12
sub
pop rvx
pop rzx

; ((((ptr)[op_202])[op_306]([op_306]))[op_302](calc_directives))[op_202]
push [rvx + 11]
pop [rvx + 12]
push rvx
push 12
add
pop rvx
call calc_directives_1
push rvx
push 12
sub
pop rvx
pop rzx

; ([op_18](ptr))[op_202]
push [rvx + 11]
swp
ret
pop rzx
push 0
swp
ret
_func_Camera3d_1_END:

; (_SYMBOL_SIZE_Y_FIXING_COEF)[op_20](1.32)
push 1.32
pop [156]


; (((cam)[op_305]((x)[op_305]((y)[op_305]([op_305]))))[op_300](CamRayXY))[op_301]((){)
jmp _func_CamRayXY_1_END
_func_CamRayXY_1_BEGIN:
CamRayXY_1:

; ((3)[op_22](p))[op_21]
push rvx + 3
pop [rvx + 3]

; ((3)[op_22](horz))[op_21]
push rvx + 7
pop [rvx + 7]

; ((3)[op_22](vert))[op_21]
push rvx + 11
pop [rvx + 11]

; ((((p)[op_202])[op_306]((((cam)+(_lu))[op_202])[op_306]([op_306])))[op_302](vcopy))[op_202]
push [rvx + 3]
pop [rvx + 15]
push [rvx + 0]
push [137]

add
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call vcopy_1
push rvx
push 15
sub
pop rvx
pop rzx

; ((((horz)[op_202])[op_306]((((cam)+(_dir_h))[op_202])[op_306]([op_306])))[op_302](vcopy))[op_202]
push [rvx + 7]
pop [rvx + 15]
push [rvx + 0]
push [138]

add
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call vcopy_1
push rvx
push 15
sub
pop rvx
pop rzx

; ((((vert)[op_202])[op_306]((((cam)+(_dir_v))[op_202])[op_306]([op_306])))[op_302](vcopy))[op_202]
push [rvx + 11]
pop [rvx + 15]
push [rvx + 0]
push [139]

add
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call vcopy_1
push rvx
push 15
sub
pop rvx
pop rzx

; ((x)=(((x)/((((_max_x)[op_202])[op_306]([op_306]))[op_302](cam)))*((((_scr_w)[op_202])[op_306]([op_306]))[op_302](cam))))[op_202]
push [rvx + 1]
push [rvx + 0]
push [152]

add
pop rax
push [rax + 1]
div
push [rvx + 0]
push [141]

add
pop rax
push [rax + 1]
mul
pop [rvx + 1]
push [rvx + 1]
pop rzx

; ((y)=((((y)/((((_max_y)[op_202])[op_306]([op_306]))[op_302](cam)))*((((_scr_h)[op_202])[op_306]([op_306]))[op_302](cam)))*(_SYMBOL_SIZE_Y_FIXING_COEF)))[op_202]
push [rvx + 2]
push [rvx + 0]
push [153]

add
pop rax
push [rax + 1]
div
push [rvx + 0]
push [142]

add
pop rax
push [rax + 1]
mul
push [156]

mul
pop [rvx + 2]
push [rvx + 2]
pop rzx

; ((((horz)[op_202])[op_306](((x)[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 7]
pop [rvx + 15]
push [rvx + 1]
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call mul_to_vi_1
push rvx
push 15
sub
pop rvx
pop rzx

; ((((vert)[op_202])[op_306](((y)[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 11]
pop [rvx + 15]
push [rvx + 2]
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call mul_to_vi_1
push rvx
push 15
sub
pop rvx
pop rzx

; ((((p)[op_202])[op_306](((horz)[op_202])[op_306]([op_306])))[op_302](sum_to_vv))[op_202]
push [rvx + 3]
pop [rvx + 15]
push [rvx + 7]
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call sum_to_vv_1
push rvx
push 15
sub
pop rvx
pop rzx

; ((((p)[op_202])[op_306](((vert)[op_202])[op_306]([op_306])))[op_302](sum_to_vv))[op_202]
push [rvx + 3]
pop [rvx + 15]
push [rvx + 11]
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call sum_to_vv_1
push rvx
push 15
sub
pop rvx
pop rzx

; ((((p)[op_202])[op_306]((((cam)+(_pos))[op_202])[op_306]([op_306])))[op_302](sub_to_vv))[op_202]
push [rvx + 3]
pop [rvx + 15]
push [rvx + 0]
push [132]

add
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call sub_to_vv_1
push rvx
push 15
sub
pop rvx
pop rzx

; ((((p)[op_202])[op_306]([op_306]))[op_302](normalize))[op_202]
push [rvx + 3]
pop [rvx + 15]
push rvx
push 15
add
pop rvx
call normalize_1
push rvx
push 15
sub
pop rvx
pop rzx

; (ray)[op_20](((((cam)+(_pos))[op_202])[op_306](((p)[op_202])[op_306]([op_306])))[op_302](Ray3d))
push [rvx + 0]
push [132]

add
pop [rvx + 15]
push [rvx + 3]
pop [rvx + 16]
push rvx
push 15
add
pop rvx
call Ray3d_1
push rvx
push 15
sub
pop rvx
pop [rvx + 15]

; ([op_18](ray))[op_202]
push [rvx + 15]
swp
ret
pop rzx
push 0
swp
ret
_func_CamRayXY_1_END:

; (_c)[op_20](0)
push 0
pop [158]


; (_r)[op_20](1)
push 1
pop [159]


; (((c)[op_305]((r)[op_305]([op_305])))[op_300](Sphere3d))[op_301]((){)
jmp _func_Sphere3d_1_END
_func_Sphere3d_1_BEGIN:
Sphere3d_1:

; (ptr)[op_20](g(2))
push 2
pop rax
push rmx
push rmx
push rax
add
pop rmx
pop [rvx + 2]

; (((((_c)[op_202])[op_306]([op_306]))[op_302](ptr))=((((c)[op_202])[op_306]([op_306]))[op_302](vdup)))[op_202]
push [rvx + 0]
pop [rvx + 3]
push rvx
push 3
add
pop rvx
call vdup_1
push rvx
push 3
sub
pop rvx
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [158]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((_r)[op_202])[op_306]([op_306]))[op_302](ptr))=(r))[op_202]
push [rvx + 1]
pop rbx
push rbx
push rvx + 2
pop rax
push [rax]
push [159]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; ([op_18](ptr))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_Sphere3d_1_END:

; (_dist)[op_20](0)
push 0
pop [161]


; (_p)[op_20](1)
push 1
pop [162]


; (_n)[op_20](2)
push 2
pop [163]


; ((((d)[op_20](-1))[op_305](((p)[op_20](0))[op_305](((n)[op_20](0))[op_305]([op_305]))))[op_300](Intersection))[op_301]((){)
jmp _func_Intersection_1_END
_func_Intersection_1_BEGIN:
Intersection_1:

; (ptr)[op_20](g(3))
push 3
pop rax
push rmx
push rmx
push rax
add
pop rmx
pop [rvx + 3]

; (((((_dist)[op_202])[op_306]([op_306]))[op_302](ptr))=(d))[op_202]
push [rvx + 0]
pop rbx
push rbx
push rvx + 3
pop rax
push [rax]
push [161]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (p)[op_12]([op_31]())
if_8_cond:
push [rvx + 1]

push 0
jne if_8_true
if_8_false:

jmp if_8_end

if_8_true:

; (((((_p)[op_202])[op_306]([op_306]))[op_302](ptr))=((((p)[op_202])[op_306]([op_306]))[op_302](vdup)))[op_202]
push [rvx + 1]
pop [rvx + 4]
push rvx
push 4
add
pop rvx
call vdup_1
push rvx
push 4
sub
pop rvx
pop rbx
push rbx
push rvx + 3
pop rax
push [rax]
push [162]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

if_8_end:

; (n)[op_12]([op_31]())
if_9_cond:
push [rvx + 2]

push 0
jne if_9_true
if_9_false:

jmp if_9_end

if_9_true:

; (((((_n)[op_202])[op_306]([op_306]))[op_302](ptr))=((((n)[op_202])[op_306]([op_306]))[op_302](vdup)))[op_202]
push [rvx + 2]
pop [rvx + 4]
push rvx
push 4
add
pop rvx
call vdup_1
push rvx
push 4
sub
pop rvx
pop rbx
push rbx
push rvx + 3
pop rax
push [rax]
push [163]

push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

if_9_end:

; ([op_18](ptr))[op_202]
push [rvx + 3]
swp
ret
pop rzx
push 0
swp
ret
_func_Intersection_1_END:

; (((s)[op_305]((ray)[op_305]([op_305])))[op_300](SphereIntersect))[op_301]((){)
jmp _func_SphereIntersect_1_END
_func_SphereIntersect_1_BEGIN:
SphereIntersect_1:

; (ins)[op_20]((((0)[op_202])[op_306](((0)[op_202])[op_306](((0)[op_202])[op_306]([op_306]))))[op_302](Intersection))
push 0
pop [rvx + 2]
push 0
pop [rvx + 3]
push 0
pop [rvx + 4]
push rvx
push 2
add
pop rvx
call Intersection_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]

; (c_o)[op_20](((((((_o)[op_202])[op_306]([op_306]))[op_302](ray))[op_202])[op_306]((((((_c)[op_202])[op_306]([op_306]))[op_302](s))[op_202])[op_306]([op_306])))[op_302](sub_vv))
push [rvx + 1]
push [128]

add
pop rax
push [rax + 1]
pop [rvx + 3]
push [rvx + 0]
push [158]

add
pop rax
push [rax + 1]
pop [rvx + 4]
push rvx
push 3
add
pop rvx
call sub_vv_1
push rvx
push 3
sub
pop rvx
pop [rvx + 3]

; (discr)[op_20](((((c_o)[op_202])[op_306](((c_o)[op_202])[op_306]([op_306])))[op_302](dot_vv))-((((((((_d)[op_202])[op_306]([op_306]))[op_302](ray))[op_202])[op_306](((c_o)[op_202])[op_306]([op_306])))[op_302](dot_vv))^(2)))
push [rvx + 3]
pop [rvx + 4]
push [rvx + 3]
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call dot_vv_1
push rvx
push 4
sub
pop rvx
push [rvx + 1]
push [129]

add
pop rax
push [rax + 1]
pop [rvx + 4]
push [rvx + 3]
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call dot_vv_1
push rvx
push 4
sub
pop rvx
push 2
pow
sub
pop [rvx + 4]

; ((discr)>(((((_r)[op_202])[op_306]([op_306]))[op_302](s))^(2)))[op_12]([op_31]())
if_10_cond:
push [rvx + 4]
push [rvx + 0]
push [159]

add
pop rax
push [rax + 1]
push 2
pow
gt

push 0
jne if_10_true
if_10_false:

jmp if_10_end

if_10_true:

; ([op_18](ins))[op_202]
push [rvx + 2]
swp
ret
pop rzx

if_10_end:

; ((discr)<(0))[op_12]([op_31]())
if_11_cond:
push [rvx + 4]
push 0
lt

push 0
jne if_11_true
if_11_false:

jmp if_11_end

if_11_true:

; ([op_18](ins))[op_202]
push [rvx + 2]
swp
ret
pop rzx

if_11_end:

; (dist)[op_20]((discr)^(0.5))
push [rvx + 4]
push 0.5
pow
pop [rvx + 5]

; (delta)[op_20](((((((_r)[op_202])[op_306]([op_306]))[op_302](s))^(2))-((dist)^(2)))^(0.5))
push [rvx + 0]
push [159]

add
pop rax
push [rax + 1]
push 2
pow
push [rvx + 5]
push 2
pow
sub
push 0.5
pow
pop [rvx + 6]

; (big_dist)[op_20](-((((c_o)[op_202])[op_306]((((((_d)[op_202])[op_306]([op_306]))[op_302](ray))[op_202])[op_306]([op_306])))[op_302](dot_vv)))
push 0
push [rvx + 3]
pop [rvx + 7]
push [rvx + 1]
push [129]

add
pop rax
push [rax + 1]
pop [rvx + 8]
push rvx
push 7
add
pop rvx
call dot_vv_1
push rvx
push 7
sub
pop rvx
sub
pop [rvx + 7]

; (d1)[op_20]((big_dist)-(delta))
push [rvx + 7]
push [rvx + 6]
sub
pop [rvx + 8]

; (d2)[op_20]((big_dist)+(delta))
push [rvx + 7]
push [rvx + 6]
add
pop [rvx + 9]

; (d)[op_20](0)
push 0
pop [rvx + 10]

; (((d1)>(0))[op_11](((d2)>(d1))[op_10]((d2)<(0))))[op_12](()[op_31]((){))
if_12_cond:
push [rvx + 8]
push 0
gt
push [rvx + 9]
push [rvx + 8]
gt
push [rvx + 9]
push 0
lt
l_or
l_and

push 0
jne if_12_true
if_12_false:

; (((d2)>(0))[op_11](((d1)>(d2))[op_10]((d1)<(0))))[op_12](((){)[op_31]((){))
if_13_cond:
push [rvx + 9]
push 0
gt
push [rvx + 8]
push [rvx + 9]
gt
push [rvx + 8]
push 0
lt
l_or
l_and

push 0
jne if_13_true
if_13_false:

; ([op_18](ins))[op_202]
push [rvx + 2]
swp
ret
pop rzx

jmp if_13_end

if_13_true:

; ((d)=(d2))[op_202]
push [rvx + 9]
pop [rvx + 10]
push [rvx + 10]
pop rzx

if_13_end:

jmp if_12_end

if_12_true:

; ((d)=(d1))[op_202]
push [rvx + 8]
pop [rvx + 10]
push [rvx + 10]
pop rzx

if_12_end:

; (p)[op_20]((((ray)[op_202])[op_306](((d)[op_202])[op_306]([op_306])))[op_302](RayCast))
push [rvx + 1]
pop [rvx + 11]
push [rvx + 10]
pop [rvx + 12]
push rvx
push 11
add
pop rvx
call RayCast_1
push rvx
push 11
sub
pop rvx
pop [rvx + 11]

; ((ins)=((((d)[op_202])[op_306](((p)[op_202])[op_306]((((((((((((_c)[op_202])[op_306]([op_306]))[op_302](s))[op_202])[op_306](((p)[op_202])[op_306]([op_306])))[op_302](sub_vv))[op_202])[op_306]([op_306]))[op_302](normalize))[op_202])[op_306]([op_306]))))[op_302](Intersection)))[op_202]
push [rvx + 10]
pop [rvx + 12]
push [rvx + 11]
pop [rvx + 13]
push [rvx + 0]
push [158]

add
pop rax
push [rax + 1]
pop [rvx + 14]
push [rvx + 13]
pop [rvx + 15]
push rvx
push 14
add
pop rvx
call sub_vv_1
push rvx
push 14
sub
pop rvx
pop [rvx + 14]
push rvx
push 14
add
pop rvx
call normalize_1
push rvx
push 14
sub
pop rvx
pop [rvx + 14]
push rvx
push 12
add
pop rvx
call Intersection_1
push rvx
push 12
sub
pop rvx
pop [rvx + 2]
push [rvx + 2]
pop rzx

; ([op_18](ins))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_SphereIntersect_1_END:

; (((l)[op_305]((p)[op_305]((n)[op_305]([op_305]))))[op_300](LightCalc))[op_301]((){)
jmp _func_LightCalc_1_END
_func_LightCalc_1_BEGIN:
LightCalc_1:

; (l_p)[op_20]((((p)[op_202])[op_306](((l)[op_202])[op_306]([op_306])))[op_302](sub_vv))
push [rvx + 1]
pop [rvx + 3]
push [rvx + 0]
pop [rvx + 4]
push rvx
push 3
add
pop rvx
call sub_vv_1
push rvx
push 3
sub
pop rvx
pop [rvx + 3]

; ((((l_p)[op_202])[op_306]([op_306]))[op_302](normalize))[op_202]
push [rvx + 3]
pop [rvx + 4]
push rvx
push 4
add
pop rvx
call normalize_1
push rvx
push 4
sub
pop rvx
pop rzx

; (((((l_p)[op_202])[op_306](((n)[op_202])[op_306]([op_306])))[op_302](dot_vv))<(0))[op_12]([op_31]((){))
if_14_cond:
push [rvx + 3]
pop [rvx + 4]
push [rvx + 2]
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call dot_vv_1
push rvx
push 4
sub
pop rvx
push 0
lt

push 0
jne if_14_true
if_14_false:

jmp if_14_end

if_14_true:

; ([op_18](0))[op_202]
push 0
swp
ret
pop rzx

if_14_end:

; (nn)[op_20]((((n)[op_202])[op_306]([op_306]))[op_302](vdup))
push [rvx + 2]
pop [rvx + 4]
push rvx
push 4
add
pop rvx
call vdup_1
push rvx
push 4
sub
pop rvx
pop [rvx + 4]

; ((((nn)[op_202])[op_306](((1)[op_202])[op_306]([op_306])))[op_302](mul_to_vi))[op_202]
push [rvx + 4]
pop [rvx + 5]
push 1
pop [rvx + 6]
push rvx
push 5
add
pop rvx
call mul_to_vi_1
push rvx
push 5
sub
pop rvx
pop rzx

; ([op_18]((((l_p)[op_202])[op_306](((nn)[op_202])[op_306]([op_306])))[op_302](dot_vv)))[op_202]
push [rvx + 3]
pop [rvx + 5]
push [rvx + 4]
pop [rvx + 6]
push rvx
push 5
add
pop rvx
call dot_vv_1
push rvx
push 5
sub
pop rvx
swp
ret
pop rzx
push 0
swp
ret
_func_LightCalc_1_END:

; (((cam)[op_305]((ss)[op_305]((ss_cnt)[op_305]([op_305]))))[op_300](render))[op_301]((){)
jmp _func_render_1_END
_func_render_1_BEGIN:
render_1:

; ((((y)[op_20](0))[op_17]((y)<(_SCREEN_H)))[op_17]((y)[op_24](1)))[op_14]((){)

for_2_init_block:
push 0
pop [rvx + 3]

for_2_start:

for_2_cond:
push [rvx + 3]
push [106]

lt

push 0
je for_2_end

; ((((x)[op_20](0))[op_17]((x)<(_SCREEN_W)))[op_17]((x)[op_24](1)))[op_14]((){)

for_3_init_block:
push 0
pop [rvx + 4]

for_3_start:

for_3_cond:
push [rvx + 4]
push [105]

lt

push 0
je for_3_end

; (mem_ptr)[op_20](g)
push rmx
pop [rvx + 5]

; (ray)[op_20](CamRayXY)
push [rvx + 0]
pop [rvx + 6]
push [rvx + 4]
pop [rvx + 7]
push [rvx + 3]
pop [rvx + 8]
push rvx
push 6
add
pop rvx
call CamRayXY_1
push rvx
push 6
sub
pop rvx
pop [rvx + 6]

; (ins)[op_20]((((0)[op_202])[op_306](((0)[op_202])[op_306](((0)[op_202])[op_306]([op_306]))))[op_302](Intersection))
push 0
pop [rvx + 7]
push 0
pop [rvx + 8]
push 0
pop [rvx + 9]
push rvx
push 7
add
pop rvx
call Intersection_1
push rvx
push 7
sub
pop rvx
pop [rvx + 7]

; ((((i)[op_20](0))[op_17]((i)<(ss_cnt)))[op_17]((i)[op_24](1)))[op_14]((){)

for_4_init_block:
push 0
pop [rvx + 8]

for_4_start:

for_4_cond:
push [rvx + 8]
push [rvx + 2]
lt

push 0
je for_4_end

; (s)[op_20]((((i)[op_202])[op_306]([op_306]))[op_302](ss))
push [rvx + 1]
push [rvx + 8]
add
pop rax
push [rax + 1]
pop [rvx + 9]

; (new_ins)[op_20](SphereIntersect)
push [rvx + 9]
pop [rvx + 10]
push [rvx + 6]
pop [rvx + 11]
push rvx
push 10
add
pop rvx
call SphereIntersect_1
push rvx
push 10
sub
pop rvx
pop [rvx + 10]

; (((((_dist)[op_202])[op_306]([op_306]))[op_302](new_ins))[op_11]((((((_dist)[op_202])[op_306]([op_306]))[op_302](new_ins))<((((_dist)[op_202])[op_306]([op_306]))[op_302](ins)))[op_10](((((_dist)[op_202])[op_306]([op_306]))[op_302](ins))[op_7](0))))[op_12]([op_31]((){))
if_15_cond:
push [rvx + 10]
push [161]

add
pop rax
push [rax + 1]
push [rvx + 10]
push [161]

add
pop rax
push [rax + 1]
push [rvx + 7]
push [161]

add
pop rax
push [rax + 1]
lt
push [rvx + 7]
push [161]

add
pop rax
push [rax + 1]
push 0
eq
l_or
l_and

push 0
jne if_15_true
if_15_false:

jmp if_15_end

if_15_true:

; ((ins)=(new_ins))[op_202]
push [rvx + 10]
pop [rvx + 7]
push [rvx + 7]
pop rzx

if_15_end:
for_4_action:
push [rvx + 8]
push 1
add
pop [rvx + 8]
push [rvx + 8]
pop rzx
jmp for_4_cond

for_4_end:

; (((((_d)[op_202])[op_306]([op_306]))[op_302](ins))>(0))[op_12](((){)[op_31]((){))
if_16_cond:
push [rvx + 7]
push [129]

add
pop rax
push [rax + 1]
push 0
gt

push 0
jne if_16_true
if_16_false:

; (c)[op_20](32)
push 32
pop [rvx + 8]

; (put_pxl)[op_202]
push [rvx + 3]
pop [rvx + 9]
push [rvx + 4]
pop [rvx + 10]
push [rvx + 8]
pop [rvx + 11]
push rvx
push 9
add
pop rvx
call put_pxl_1
push rvx
push 9
sub
pop rvx
pop rzx

jmp if_16_end

if_16_true:

; (light)[op_20](((((cam)+(_pos))[op_202])[op_306]((((((_p)[op_202])[op_306]([op_306]))[op_302](ins))[op_202])[op_306]((((((_n)[op_202])[op_306]([op_306]))[op_302](ins))[op_202])[op_306]([op_306]))))[op_302](LightCalc))
push [rvx + 0]
push [132]

add
pop [rvx + 8]
push [rvx + 7]
push [162]

add
pop rax
push [rax + 1]
pop [rvx + 9]
push [rvx + 7]
push [163]

add
pop rax
push [rax + 1]
pop [rvx + 10]
push rvx
push 8
add
pop rvx
call LightCalc_1
push rvx
push 8
sub
pop rvx
pop [rvx + 8]

; (c)[op_20]((12)*(light))
push 12
push [rvx + 8]
mul
pop [rvx + 9]

; (put_pxl)[op_202]
push [rvx + 3]
pop [rvx + 10]
push [rvx + 4]
pop [rvx + 11]
push [rvx + 9]
pop [rvx + 12]
push rvx
push 10
add
pop rvx
call put_pxl_1
push rvx
push 10
sub
pop rvx
pop rzx

if_16_end:

; (mem_d)[op_20]((g)-(mem_ptr))
push rmx
push [rvx + 5]
sub
pop [rvx + 8]

; (g(-(mem_d)))[op_202]
push 0
push [rvx + 8]
sub
pop rax
push rmx
push rmx
push rax
add
pop rmx
pop rzx
for_3_action:
push [rvx + 4]
push 1
add
pop [rvx + 4]
push [rvx + 4]
pop rzx
jmp for_3_cond

for_3_end:
for_2_action:
push [rvx + 3]
push 1
add
pop [rvx + 3]
push [rvx + 3]
pop rzx
jmp for_2_cond

for_2_end:
push 0
swp
ret
_func_render_1_END:

; (([op_305])[op_300](main))[op_301]((){)
jmp _func_main_1_END
_func_main_1_BEGIN:
main_1:

; (cam)[op_20]((((0)[op_202])[op_306](((0)[op_202])[op_306](((0)[op_202])[op_306](((1)[op_202])[op_306](((0)[op_202])[op_306](((0)[op_202])[op_306](((10)[op_202])[op_306](((20)[op_202])[op_306](((10)[op_202])[op_306](((_SCREEN_W)[op_202])[op_306](((_SCREEN_H)[op_202])[op_306]([op_306]))))))))))))[op_302](Camera3d))
push 0
pop [rvx + 0]
push 0
pop [rvx + 1]
push 0
pop [rvx + 2]
push 1
pop [rvx + 3]
push 0
pop [rvx + 4]
push 0
pop [rvx + 5]
push 10
pop [rvx + 6]
push 20
pop [rvx + 7]
push 10
pop [rvx + 8]
push [105]

pop [rvx + 9]
push [106]

pop [rvx + 10]
push rvx
push 0
add
pop rvx
call Camera3d_1
push rvx
push 0
sub
pop rvx
pop [rvx + 0]

; (c1)[op_20]((((10)[op_202])[op_306](((0)[op_202])[op_306](((0)[op_202])[op_306]([op_306]))))[op_302](Vec3d))
push 10
pop [rvx + 1]
push 0
pop [rvx + 2]
push 0
pop [rvx + 3]
push rvx
push 1
add
pop rvx
call Vec3d_1
push rvx
push 1
sub
pop rvx
pop [rvx + 1]

; (s1)[op_20]((((c1)[op_202])[op_306](((2.5)[op_202])[op_306]([op_306])))[op_302](Sphere3d))
push [rvx + 1]
pop [rvx + 2]
push 2.5
pop [rvx + 3]
push rvx
push 2
add
pop rvx
call Sphere3d_1
push rvx
push 2
sub
pop rvx
pop [rvx + 2]

; (c2)[op_20]((((10)[op_202])[op_306](((0)[op_202])[op_306](((0)[op_202])[op_306]([op_306]))))[op_302](Vec3d))
push 10
pop [rvx + 3]
push 0
pop [rvx + 4]
push 0
pop [rvx + 5]
push rvx
push 3
add
pop rvx
call Vec3d_1
push rvx
push 3
sub
pop rvx
pop [rvx + 3]

; (s2)[op_20]((((c2)[op_202])[op_306](((3)[op_202])[op_306]([op_306])))[op_302](Sphere3d))
push [rvx + 3]
pop [rvx + 4]
push 3
pop [rvx + 5]
push rvx
push 4
add
pop rvx
call Sphere3d_1
push rvx
push 4
sub
pop rvx
pop [rvx + 4]

; (c3)[op_20]((((10)[op_202])[op_306](((0)[op_202])[op_306](((0)[op_202])[op_306]([op_306]))))[op_302](Vec3d))
push 10
pop [rvx + 5]
push 0
pop [rvx + 6]
push 0
pop [rvx + 7]
push rvx
push 5
add
pop rvx
call Vec3d_1
push rvx
push 5
sub
pop rvx
pop [rvx + 5]

; (s3)[op_20]((((c3)[op_202])[op_306](((3.5)[op_202])[op_306]([op_306])))[op_302](Sphere3d))
push [rvx + 5]
pop [rvx + 6]
push 3.5
pop [rvx + 7]
push rvx
push 6
add
pop rvx
call Sphere3d_1
push rvx
push 6
sub
pop rvx
pop [rvx + 6]

; (c4)[op_20]((((0)[op_202])[op_306](((0)[op_202])[op_306](((-1000)[op_202])[op_306]([op_306]))))[op_302](Vec3d))
push 0
pop [rvx + 7]
push 0
pop [rvx + 8]
push 0
push 1000
sub

pop [rvx + 9]
push rvx
push 7
add
pop rvx
call Vec3d_1
push rvx
push 7
sub
pop rvx
pop [rvx + 7]

; (s4)[op_20]((((c4)[op_202])[op_306](((999)[op_202])[op_306]([op_306])))[op_302](Sphere3d))
push [rvx + 7]
pop [rvx + 8]
push 999
pop [rvx + 9]
push rvx
push 8
add
pop rvx
call Sphere3d_1
push rvx
push 8
sub
pop rvx
pop [rvx + 8]

; (ss_cnt)[op_20](4)
push 4
pop [rvx + 9]

; ((5)[op_22](ss))[op_21]
push rvx + 10
pop [rvx + 10]

; (((((0)[op_202])[op_306]([op_306]))[op_302](ss))=(s1))[op_202]
push [rvx + 2]
pop rbx
push rbx
push rvx + 10
pop rax
push [rax]
push 0
push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((1)[op_202])[op_306]([op_306]))[op_302](ss))=(s2))[op_202]
push [rvx + 4]
pop rbx
push rbx
push rvx + 10
pop rax
push [rax]
push 1
push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((2)[op_202])[op_306]([op_306]))[op_302](ss))=(s3))[op_202]
push [rvx + 6]
pop rbx
push rbx
push rvx + 10
pop rax
push [rax]
push 2
push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (((((3)[op_202])[op_306]([op_306]))[op_302](ss))=(s4))[op_202]
push [rvx + 8]
pop rbx
push rbx
push rvx + 10
pop rax
push [rax]
push 3
push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx

; (g_init)[op_202]
push rvx
push 16
add
pop rvx
call g_init_1
push rvx
push 16
sub
pop rvx
pop rzx

; ((((i)[op_20](0))[op_17]((i)<(100)))[op_17]((i)[op_24](1)))[op_14]((){)

for_5_init_block:
push 0
pop [rvx + 16]

for_5_start:

for_5_cond:
push [rvx + 16]
push 100
lt

push 0
je for_5_end

; ((((i)[op_20](0))[op_17]((i)<(3)))[op_17]((i)[op_24](1)))[op_14]((){)

for_6_init_block:
push 0
pop [rvx + 17]

for_6_start:

for_6_cond:
push [rvx + 17]
push 3
lt

push 0
je for_6_end

; (rnd)[op_20]((_x)h(_z))
push [111]

push [113]

bin_op $
pop [rvx + 18]

; (((((i)[op_202])[op_306](((_c)[op_202])[op_306](((rnd)[op_202])[op_306]([op_306]))))[op_302](ss))[op_24]((1.5)^(i)))[op_202]
push 0
pop rzx
push rvx + 10
pop rax
push [rax]
push [rvx + 17]
push 1
add
add
pop rax
push [rax]
push [158]

push 1
add
add
pop rax
push [rax]
push [rvx + 18]
push 1
add
add
pop rax
push rax
pop rcx
push [rax]

push 1.5
push [rvx + 17]
pow
add
pop rbx
push rbx
push rvx + 10
pop rax
push [rax]
push [rvx + 17]
push 1
add
add
pop rax
push [rax]
push [158]

push 1
add
add
pop rax
push [rax]
push [rvx + 18]
push 1
add
add
pop rax
push rax
pop rcx
pop [rax]

push [rcx]

pop rzx
for_6_action:
push [rvx + 17]
push 1
add
pop [rvx + 17]
push [rvx + 17]
pop rzx
jmp for_6_cond

for_6_end:

; (render)[op_202]
push [rvx + 0]
pop [rvx + 17]
push [rvx + 10]
pop [rvx + 18]
push [rvx + 9]
pop [rvx + 19]
push rvx
push 17
add
pop rvx
call render_1
push rvx
push 17
sub
pop rvx
pop rzx

; (g_tick)[op_202]
push rvx
push 17
add
pop rvx
call g_tick_1
push rvx
push 17
sub
pop rvx
pop rzx
for_5_action:
push [rvx + 16]
push 1
add
pop [rvx + 16]
push [rvx + 16]
pop rzx
jmp for_5_cond

for_5_end:
push 0
swp
ret
_func_main_1_END:

; (main)[op_202]
push rvx
push 0
add
pop rvx
call main_1
push rvx
push 0
sub
pop rvx
pop rzx
