push 200
pop rvx
call MAIN
halt

; (P)[op_20](1)
push 1.000000
pop [rvx + 0]

; ((((A)[op_20](-7777.78))[op_305](((B)[op_20](-7777.78))[op_305](((C)[op_20](-7777.78))[op_305]([op_305]))))[op_300](printn))[op_301]((){)
jmp _func_printn_END
_func_printn_BEGIN:
printn:

; ((A)[op_8](-7777.78))[op_15]([op_31]((){))
if_1_cond:
push [rvx + 0]
push 0
push 7777.777000
sub

neq

push 0
jne if_1_true
if_1_false:

jmp if_1_end

if_1_true:

; (d(A))[op_202]
push [rvx + 0]
dup
out
pop rzx

; (e(32))[op_202]
push 32.000000
dup
out_c
pop rzx

if_1_end:

; ((B)[op_8](-7777.78))[op_15]([op_31]((){))
if_2_cond:
push [rvx + 1]
push 0
push 7777.777000
sub

neq

push 0
jne if_2_true
if_2_false:

jmp if_2_end

if_2_true:

; (d(B))[op_202]
push [rvx + 1]
dup
out
pop rzx

; (e(32))[op_202]
push 32.000000
dup
out_c
pop rzx

if_2_end:

; ((C)[op_8](-7777.78))[op_15]([op_31]((){))
if_3_cond:
push [rvx + 2]
push 0
push 7777.777000
sub

neq

push 0
jne if_3_true
if_3_false:

jmp if_3_end

if_3_true:

; (d(C))[op_202]
push [rvx + 2]
dup
out
pop rzx

; (e(32))[op_202]
push 32.000000
dup
out_c
pop rzx

if_3_end:

; (d)[op_202]
push 10
dup
out_c
pop rzx

; ([op_18](4))[op_202]
push 4.000000
swp
ret
pop rzx
push 0
swp
ret
_func_printn_END:

; ((((a)[op_20]((x)+(y)))[op_305](((b)[op_20]((2)*(x)))[op_305]([op_305])))[op_300](sum))[op_301]((){)
jmp _func_sum_END
_func_sum_BEGIN:
sum:

; (c)[op_20]((a)+(b))
push [rvx + 0]
push [rvx + 1]
add
pop [rvx + 2]

; ((((c)[op_202])[op_306]([op_306]))[op_302](printn))[op_202]
push [rvx + 2]
pop [rvx + 3]
push 0
push 7777.777000
sub

pop [rvx + 4]
push 0
push 7777.777000
sub

pop [rvx + 5]
push rvx
push 3
add
pop rvx
call printn
pop rzx

; ([op_18](c))[op_202]
push [rvx + 2]
swp
ret
pop rzx
push 0
swp
ret
_func_sum_END:

; (([op_305])[op_300](first))[op_301]((){)
jmp _func_first_END
_func_first_BEGIN:
first:

; (x)[op_20](1)
push 1.000000
pop [rvx + 0]

; (y)[op_20](2)
push 2.000000
pop [rvx + 1]

; (sum)[op_202]
push [rvx + 0]
push [rvx + 1]
add
pop [rvx + 2]
push 2.000000
push [rvx + 0]
mul
pop [rvx + 3]
push rvx
push 2
add
pop rvx
call sum
pop rzx

; ([op_18])[op_202]
push 0
swp
ret
pop rzx
push 0
swp
ret
_func_first_END:

; (([op_305])[op_300](second))[op_301]((){)
jmp _func_second_END
_func_second_BEGIN:
second:

; (x)[op_20](400)
push 400.000000
pop [rvx + 0]

; (y)[op_20](500)
push 500.000000
pop [rvx + 1]

; (sum)[op_202]
push [rvx + 0]
push [rvx + 1]
add
pop [rvx + 2]
push 2.000000
push [rvx + 0]
mul
pop [rvx + 3]
push rvx
push 2
add
pop rvx
call sum
pop rzx
push 0
swp
ret
_func_second_END:

; (([op_305])[op_300](MAIN))[op_301]((){)
jmp _func_MAIN_END
_func_MAIN_BEGIN:
MAIN:

; (first)[op_202]
push rvx
push 0
add
pop rvx
call first
pop rzx

; (second)[op_202]
push rvx
push 0
add
pop rvx
call second
pop rzx
push 0
swp
ret
_func_MAIN_END:
